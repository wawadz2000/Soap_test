
package services.remote;

import jakarta.jws.WebMethod;
import jakarta.jws.WebParam;
import jakarta.jws.WebResult;
import jakarta.jws.WebService;
import jakarta.xml.bind.annotation.XmlSeeAlso;
import jakarta.xml.ws.Action;
import jakarta.xml.ws.RequestWrapper;
import jakarta.xml.ws.ResponseWrapper;


/**
 * This class was generated by the XML-WS Tools.
 * XML-WS Tools 4.0.0
 * Generated source version: 3.0
 * 
 */
@WebService(name = "Calculateur", targetNamespace = "http://remote.services/")
@XmlSeeAlso({
    ObjectFactory.class
})
public interface Calculateur {


    /**
     * 
     * @param arg0
     * @param arg1
     * @return
     *     returns float
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "distance", targetNamespace = "http://remote.services/", className = "services.remote.Distance")
    @ResponseWrapper(localName = "distanceResponse", targetNamespace = "http://remote.services/", className = "services.remote.DistanceResponse")
    @Action(input = "http://remote.services/Calculateur/distanceRequest", output = "http://remote.services/Calculateur/distanceResponse")
    public float distance(
        @WebParam(name = "arg0", targetNamespace = "")
        Point arg0,
        @WebParam(name = "arg1", targetNamespace = "")
        Point arg1);

    /**
     * 
     * @param arg0
     * @param arg1
     * @return
     *     returns float
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "multiplication", targetNamespace = "http://remote.services/", className = "services.remote.Multiplication")
    @ResponseWrapper(localName = "multiplicationResponse", targetNamespace = "http://remote.services/", className = "services.remote.MultiplicationResponse")
    @Action(input = "http://remote.services/Calculateur/multiplicationRequest", output = "http://remote.services/Calculateur/multiplicationResponse")
    public float multiplication(
        @WebParam(name = "arg0", targetNamespace = "")
        float arg0,
        @WebParam(name = "arg1", targetNamespace = "")
        float arg1);

    /**
     * 
     * @param arg0
     * @param arg1
     * @return
     *     returns float
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "soustraction", targetNamespace = "http://remote.services/", className = "services.remote.Soustraction")
    @ResponseWrapper(localName = "soustractionResponse", targetNamespace = "http://remote.services/", className = "services.remote.SoustractionResponse")
    @Action(input = "http://remote.services/Calculateur/soustractionRequest", output = "http://remote.services/Calculateur/soustractionResponse")
    public float soustraction(
        @WebParam(name = "arg0", targetNamespace = "")
        float arg0,
        @WebParam(name = "arg1", targetNamespace = "")
        float arg1);

    /**
     * 
     * @param arg0
     * @param arg1
     * @return
     *     returns float
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "division", targetNamespace = "http://remote.services/", className = "services.remote.Division")
    @ResponseWrapper(localName = "divisionResponse", targetNamespace = "http://remote.services/", className = "services.remote.DivisionResponse")
    @Action(input = "http://remote.services/Calculateur/divisionRequest", output = "http://remote.services/Calculateur/divisionResponse")
    public float division(
        @WebParam(name = "arg0", targetNamespace = "")
        float arg0,
        @WebParam(name = "arg1", targetNamespace = "")
        float arg1);

    /**
     * 
     * @param arg0
     * @param arg1
     * @return
     *     returns float
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "addition", targetNamespace = "http://remote.services/", className = "services.remote.Addition")
    @ResponseWrapper(localName = "additionResponse", targetNamespace = "http://remote.services/", className = "services.remote.AdditionResponse")
    @Action(input = "http://remote.services/Calculateur/additionRequest", output = "http://remote.services/Calculateur/additionResponse")
    public float addition(
        @WebParam(name = "arg0", targetNamespace = "")
        float arg0,
        @WebParam(name = "arg1", targetNamespace = "")
        float arg1);

}
